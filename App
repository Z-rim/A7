import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;


public class App {
    public static void printArray(int[] array) {
        for (int a : array) {
            System.out.print(a + " ");
        }
        System.out.println();
    }

    public static int[] createRandomArray(int arrayLength) {
        int[] array = new int[arrayLength];
        Random random = new Random();
        for (int i = 0; i < arrayLength; i++) {
            array[i] = random.nextInt(100);
        }
        return array;
    }

    public static boolean isSorted(int[] array) {
        for (int i = 0; i < array.length - 1; i++) {
            if (array[i] > array[i + 1]) {
                return false;
            }
        }
        return true;
    }

    public static void main(String[] args) throws Exception {
        long startTime;
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nPlease enter the length of the random integer array that you would like to sort: ");
            String str = scanner.next();
            int arrayLength;
            try {
                arrayLength = Integer.parseInt(str);
            } catch (NumberFormatException e) {
                arrayLength = 0;
            }

            if (arrayLength <= 0) {
                System.out.println("\nInvalid array length. The value must be a positive integer.");
                continue;
            }
            startTime = System.currentTimeMillis();
            int[] array = createRandomArray(arrayLength);
            System.out.printf("\nThe time it took to create a random integer array of length %d is %.3f seconds.\n",
                    arrayLength, (System.currentTimeMillis() - startTime) / 1000.0);
            startTime = System.currentTimeMillis();
            int[] sortedArray = Sort.mergeSort(array);
            System.out.printf(
                    "The time it took for merge sort to sort a random integer array of length %d is %.3f seconds.\n",
                    arrayLength, (System.currentTimeMillis() - startTime) / 1000.0);

            System.out.println("The sorted array is in the correct order: " + isSorted(sortedArray));

            startTime = System.currentTimeMillis();
            Sort.bubbleSort(array);
            System.out.printf(
                    "The time it took for bubble sort to sort a random integer array of length %d is %.3f seconds.\n",
                    arrayLength, (System.currentTimeMillis() - startTime) / 1000.0);
            System.out.println(
                    "The results of merge sort and bubble sort are the same: " + Arrays.equals(array, sortedArray));

            System.out.println("\nWould you like to continue? Enter \"yes\" to continue or \"no\" to quit:");
            String yesNo = scanner.next();
            if (yesNo.equalsIgnoreCase("yes")) {
                continue;
            } else if (yesNo.equalsIgnoreCase("no")) {
                System.out.println("\nGoodbye!");
                break;
            } else {
                System.out.println(
                        "\nInvalid choice! \nSince you did not enter either \"yes\" or \"no\","
                                + " the program will automatically quit for you. \n\nGoodbye!");
                break;
            }

        }

        scanner.close();
    }
}